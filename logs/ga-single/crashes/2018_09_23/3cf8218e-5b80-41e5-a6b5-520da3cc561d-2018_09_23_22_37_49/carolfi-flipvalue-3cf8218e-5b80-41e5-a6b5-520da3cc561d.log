[INFO -- 2018-09-23 22:37:46]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-23 22:37:46]
Initialization strings:
[INFO -- 2018-09-23 22:37:46]
(1) file /tmp/knapsack/ga
[INFO -- 2018-09-23 22:37:46]
initSignal:1
[INFO -- 2018-09-23 22:37:46]
endSignal:3.5
[INFO -- 2018-09-23 22:37:46]
faultModel:0
[INFO -- 2018-09-23 22:37:49]
Backtrace BEGIN:
#0  0x0000555555558324 in std::_Vector_base<int, std::allocator<int> >::_M_create_storage (this=0x7fffffffd9b0, __n=140737488345111) at /usr/include/c++/7/bits/stl_vector.h:185
#1  0x0000555555556e73 in std::_Vector_base<int, std::allocator<int> >::_Vector_base (this=0x7fffffffd9b0, __n=200, __a=...) at /usr/include/c++/7/bits/stl_vector.h:138
#2  0x0000555555555e83 in std::vector<int, std::allocator<int> >::vector (this=0x7fffffffd9b0, __x=std::vector of length 200, capacity 200 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#3  0x000055555555507b in tournament (pop=std::vector of length 40, capacity 64 = {...}) at knapsackga.cpp:67
#4  0x0000555555555447 in genetic_algorithm () at knapsackga.cpp:103
#5  0x00005555555558d7 in main () at knapsackga.cpp:137

180		  _Tr::deallocate(_M_impl, __p, __n);
181	      }
182	
183	    private:
184	      void
185	      _M_create_storage(size_t __n)
186	      {
187		this->_M_impl._M_start = this->_M_allocate(__n);
188		this->_M_impl._M_finish = this->_M_impl._M_start;
189		this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;

Backtrace END
Memory content before bitflip:0x280x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575f010 
address max offset: 4
Memory content after  bitflip:0x280x000x000x20
frame name: tournament
symbol name: pop_size
symbol filename: knapsackga.cpp
symbol line: 17
value: 536870952
value address: 0x55555575f010 <pop_size>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-23 22:37:49]
Fault Injection Successful after 3.009561777114868s
[INFO -- 2018-09-23 22:37:49]
event type: exit
[EXCEPTION -- 2018-09-23 22:37:49]
exit code: no exit code available
