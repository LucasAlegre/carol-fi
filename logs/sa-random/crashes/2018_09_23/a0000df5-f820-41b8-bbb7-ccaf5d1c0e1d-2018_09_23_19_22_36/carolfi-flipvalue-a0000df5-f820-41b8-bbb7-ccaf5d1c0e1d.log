[INFO -- 2018-09-23 19:22:35]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-23 19:22:35]
Initialization strings:
[INFO -- 2018-09-23 19:22:35]
(1) file /tmp/knapsack/sa
[INFO -- 2018-09-23 19:22:35]
initSignal:0
[INFO -- 2018-09-23 19:22:35]
endSignal:2
[INFO -- 2018-09-23 19:22:35]
faultModel:2
[INFO -- 2018-09-23 19:22:35]
Backtrace BEGIN:
#0  0x0000555555556516 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator (this=0x7fffffffd940, __i=@0x7fffffffd938: 0x5555557716f0) at /usr/include/c++/7/bits/stl_iterator.h:780
#1  0x0000555555555d72 in std::vector<int, std::allocator<int> >::end (this=0x7fffffffd9e0) at /usr/include/c++/7/bits/stl_vector.h:591
#2  0x0000555555555693 in std::vector<int, std::allocator<int> >::vector (this=0x7fffffffda00, __x=std::vector of length 200, capacity 200 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#3  0x00005555555550ca in simulated_annealing () at knapsacksa.cpp:47
#4  0x000055555555535e in main () at knapsacksa.cpp:84

775	      _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
776	      : _M_current(_Iterator()) { }
777	
778	      explicit
779	      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
780	      : _M_current(__i) { }
781	
782	      // Allow iterator to const_iterator conversion
783	      template<typename _Iter>
784	        __normal_iterator(const __normal_iterator<_Iter,

Backtrace END
Memory content before bitflip:0xc80x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555759068 
address max offset: 4
Memory content after  bitflip:0xd20xad0xcc0x55
frame name: std::vector<int, std::allocator<int> >::vector
symbol name: n
symbol filename: knapsacksa.cpp
symbol line: 15
value: 1439477202
value address: 0x555555759068 <n>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-23 19:22:35]
Fault Injection Successful after 0.8138034343719482s
[INFO -- 2018-09-23 19:22:35]
event type: exit
[EXCEPTION -- 2018-09-23 19:22:35]
exit code: no exit code available
