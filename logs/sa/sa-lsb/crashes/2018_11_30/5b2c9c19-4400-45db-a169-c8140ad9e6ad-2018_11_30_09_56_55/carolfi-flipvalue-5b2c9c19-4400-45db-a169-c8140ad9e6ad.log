[INFO -- 2018-11-30 09:56:53]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-30 09:56:53]
Initialization strings:
[INFO -- 2018-11-30 09:56:53]
(1) file /tmp/knapsack/sa
[INFO -- 2018-11-30 09:56:53]
initSignal:0
[INFO -- 2018-11-30 09:56:53]
endSignal:7
[INFO -- 2018-11-30 09:56:53]
faultModel:4
[INFO -- 2018-11-30 09:56:54]
Backtrace BEGIN:
#0  std::vector<int, std::allocator<int> >::begin (this=0x7fffffffd970) at /usr/include/c++/7/bits/stl_vector.h:572
#1  0x0000555555555932 in std::vector<int, std::allocator<int> >::vector (this=0x7fffffffd990, __x=std::vector of length 200, capacity 200 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#2  0x0000555555555204 in simulated_annealing () at knapsacksa.cpp:49
#3  0x0000555555555522 in main () at knapsacksa.cpp:85

567	       *  Returns a read-only (constant) iterator that points to the
568	       *  first element in the %vector.  Iteration is done in ordinary
569	       *  element order.
570	       */
571	      const_iterator
572	      begin() const _GLIBCXX_NOEXCEPT
573	      { return const_iterator(this->_M_impl._M_start); }
574	
575	      /**
576	       *  Returns a read/write iterator that points one past the last

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping value of field: std::_Vector_base<int, std::allocator<int> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x100xe60x760x550x550x550x000x00
Fault Model: LSB bit-flip
base address to flip value: 0x7fffffffd990
address max offset: 8
Memory content after  bitflip:0x100xe60x760x550x550x550x000x02
frame name: std::vector<int, std::allocator<int> >::vector
symbol name: this
symbol filename: knapsacksa.cpp
symbol line: 0
value: 0x7fffffffd990
value address: 0x7fffffffd8f8
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-30 09:56:54]
Fault Injection Successful after 1.7513418197631836s
[INFO -- 2018-11-30 09:56:54]
event type: exit
[EXCEPTION -- 2018-11-30 09:56:54]
exit code: no exit code available
