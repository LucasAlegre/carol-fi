[INFO -- 2018-09-21 21:54:39]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-21 21:54:39]
Initialization strings:
[INFO -- 2018-09-21 21:54:39]
(1) file /tmp/knapsack/dp
[INFO -- 2018-09-21 21:54:39]
initSignal:1
[INFO -- 2018-09-21 21:54:39]
endSignal:3
[INFO -- 2018-09-21 21:54:39]
faultModel:2
[EXCEPTION -- 2018-09-21 21:54:40]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[EXCEPTION -- 2018-09-21 21:54:40]
gdbException: Cannot access memory at address 0xda8680acb2908f51
[EXCEPTION -- 2018-09-21 21:54:40]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-21 21:54:40]
Backtrace BEGIN:
#0  0x000055555555573a in std::vector<int, std::allocator<int> >::operator[] (this=0xda8680acb2909413, __n=135302) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555550ee in knapSack (W=588593, n=200, val=std::vector of length 200, capacity 256 = {...}, wt=std::vector of length 200, capacity 256 = {...}) at knapsackdp.cpp:27
#2  0x0000555555555375 in main () at knapsackdp.cpp:54

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x860x100x020x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd930
address max offset: 8
Memory content after  bitflip:0xaf0x840xa70xd70x3a0x120x090x9e
frame name: std::vector<int, std::allocator<int> >::operator[]
symbol name: __n
symbol filename: /usr/include/c++/7/bits/stl_vector.h
symbol line: 795
value: 11387653176718492847
value address: 0x7fffffffd930
Type: The type is an integer type.
Type sizeof: 8

[INFO -- 2018-09-21 21:54:40]
Fault Injection Successful after 1.9318368434906006s
[INFO -- 2018-09-21 21:54:41]
event type: exit
[EXCEPTION -- 2018-09-21 21:54:41]
exit code: no exit code available
