[INFO -- 2018-09-24 19:24:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-24 19:24:57]
Initialization strings:
[INFO -- 2018-09-24 19:24:57]
(1) file /tmp/knapsack/ga
[INFO -- 2018-09-24 19:24:57]
initSignal:1
[INFO -- 2018-09-24 19:24:57]
endSignal:3.5
[INFO -- 2018-09-24 19:24:57]
faultModel:0
[INFO -- 2018-09-24 19:24:59]
Backtrace BEGIN:
#0  0x0000555555556ed3 in std::vector<int, std::allocator<int> >::begin (this=0x7fffffffd910) at /usr/include/c++/7/bits/stl_vector.h:573
#1  0x0000555555556165 in std::vector<int, std::allocator<int> >::operator= (this=0x7fffffffd950, __x=std::vector of length 200, capacity 200 = {...}) at /usr/include/c++/7/bits/vector.tcc:206
#2  0x000055555555516a in crossover (pai=std::vector of length 200, capacity 200 = {...}, mae=std::vector of length 200, capacity 200 = {...}, filho1=std::vector of length 0, capacity 0, filho2=std::vector of length 0, capacity 0) at knapsackga.cpp:76
#3  0x000055555555548d in genetic_algorithm () at knapsackga.cpp:104
#4  0x00005555555558d7 in main () at knapsackga.cpp:137

568	       *  first element in the %vector.  Iteration is done in ordinary
569	       *  element order.
570	       */
571	      const_iterator
572	      begin() const _GLIBCXX_NOEXCEPT
573	      { return const_iterator(this->_M_impl._M_start); }
574	
575	      /**
576	       *  Returns a read/write iterator that points one past the last
577	       *  element in the %vector.  Iteration is done in ordinary

Backtrace END
Memory content before bitflip:0xc80x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575f068 
address max offset: 4
Memory content after  bitflip:0xe80x000x000x00
frame name: crossover
symbol name: n
symbol filename: knapsackga.cpp
symbol line: 16
value: 232
value address: 0x55555575f068 <n>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-24 19:24:59]
Fault Injection Successful after 2.141566276550293s
[INFO -- 2018-09-24 19:24:59]
event type: exit
[EXCEPTION -- 2018-09-24 19:24:59]
exit code: no exit code available
