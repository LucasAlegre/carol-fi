[INFO -- 2018-09-25 02:55:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-25 02:55:23]
Initialization strings:
[INFO -- 2018-09-25 02:55:23]
(1) file /tmp/knapsack/ga
[INFO -- 2018-09-25 02:55:23]
initSignal:1
[INFO -- 2018-09-25 02:55:23]
endSignal:3.5
[INFO -- 2018-09-25 02:55:23]
faultModel:4
[EXCEPTION -- 2018-09-25 02:55:24]
pythonException: 19
[INFO -- 2018-09-25 02:55:24]
Backtrace BEGIN:
#0  0x0000555555555bcf in std::vector<int, std::allocator<int> >::~vector (this=0x7fffffffd820, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:434
#1  0x0000555555557474 in std::vector<int, std::allocator<int> >::_M_move_assign (this=0x7fffffffd910, __x=...) at /usr/include/c++/7/bits/stl_vector.h:1531
#2  0x0000555555556453 in std::vector<int, std::allocator<int> >::operator= (this=0x7fffffffd910, __x=...) at /usr/include/c++/7/bits/stl_vector.h:466
#3  0x0000555555555422 in genetic_algorithm () at knapsackga.cpp:102
#4  0x00005555555558d7 in main () at knapsackga.cpp:137

429	       *  elements themselves are pointers, the pointed-to memory is
430	       *  not touched in any way.  Managing the pointer is the user's
431	       *  responsibility.
432	       */
433	      ~vector() _GLIBCXX_NOEXCEPT
434	      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
435			      _M_get_Tp_allocator()); }
436	
437	      /**
438	       *  @brief  %Vector assignment operator.

Backtrace END
Memory content before bitflip:0xc80x000x000x00
Fault Model: LSB bit-flip
base address to flip value: 0x55555575f068 
address max offset: 4
Memory content after  bitflip:0xc80x000x000x01
frame name: std::vector<int, std::allocator<int> >::_M_move_assign
symbol name: n
symbol filename: knapsackga.cpp
symbol line: 16
value: 16777416
value address: 0x55555575f068 <n>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-25 02:55:24]
Fault Injection Successful after 1.3912596702575684s
[INFO -- 2018-09-25 02:55:24]
event type: exit
[EXCEPTION -- 2018-09-25 02:55:24]
exit code: no exit code available
