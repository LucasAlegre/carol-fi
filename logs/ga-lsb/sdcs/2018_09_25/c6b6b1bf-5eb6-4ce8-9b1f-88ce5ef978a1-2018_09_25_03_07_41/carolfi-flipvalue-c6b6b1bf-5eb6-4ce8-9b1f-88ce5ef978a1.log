[INFO -- 2018-09-25 03:07:39]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-25 03:07:39]
Initialization strings:
[INFO -- 2018-09-25 03:07:39]
(1) file /tmp/knapsack/ga
[INFO -- 2018-09-25 03:07:39]
initSignal:1
[INFO -- 2018-09-25 03:07:39]
endSignal:3.5
[INFO -- 2018-09-25 03:07:39]
faultModel:4
[INFO -- 2018-09-25 03:07:40]
Backtrace BEGIN:
#0  0x00005555555568b8 in std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (this=0x7fffffffd820) at /usr/include/c++/7/bits/stl_vector.h:116
#1  0x0000555555555bc4 in std::vector<int, std::allocator<int> >::~vector (this=0x7fffffffd820, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:435
#2  0x0000555555557474 in std::vector<int, std::allocator<int> >::_M_move_assign (this=0x7fffffffd910, __x=...) at /usr/include/c++/7/bits/stl_vector.h:1531
#3  0x0000555555556453 in std::vector<int, std::allocator<int> >::operator= (this=0x7fffffffd910, __x=...) at /usr/include/c++/7/bits/stl_vector.h:466
#4  0x0000555555555422 in genetic_algorithm () at knapsackga.cpp:102
#5  0x00005555555558d7 in main () at knapsackga.cpp:137

111	    public:
112	      typedef _Alloc allocator_type;
113	
114	      _Tp_alloc_type&
115	      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
116	      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
117	
118	      const _Tp_alloc_type&
119	      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
120	      { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }

Backtrace END
Memory content before bitflip:0xca0x070x000x00
Fault Model: LSB bit-flip
base address to flip value: 0x7fffffffd8c4
address max offset: 4
Memory content after  bitflip:0xca0x070x000x40
frame name: genetic_algorithm
symbol name: g
symbol filename: knapsackga.cpp
symbol line: 94
value: 1073743818
value address: 0x7fffffffd8c4
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-25 03:07:40]
Fault Injection Successful after 1.1746397018432617s
[INFO -- 2018-09-25 03:07:40]
event type: exit
[INFO -- 2018-09-25 03:07:40]
exit code: 0
