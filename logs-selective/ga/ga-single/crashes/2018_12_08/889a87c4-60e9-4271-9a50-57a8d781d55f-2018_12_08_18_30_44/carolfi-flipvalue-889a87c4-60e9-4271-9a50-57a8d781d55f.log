[INFO -- 2018-12-08 18:30:40]
Starting flip_value script
version: 1.1
[INFO -- 2018-12-08 18:30:40]
Initialization strings:
[INFO -- 2018-12-08 18:30:40]
(1) file /tmp/knapsack/ga
[INFO -- 2018-12-08 18:30:40]
initSignal:1
[INFO -- 2018-12-08 18:30:40]
endSignal:8
[INFO -- 2018-12-08 18:30:40]
faultModel:0
[INFO -- 2018-12-08 18:30:43]
Backtrace BEGIN:
#0  0x00005555555570b2 in std::vector<int, std::allocator<int> >::size (this=0x7fffffffd8e0) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x0000555555556415 in std::vector<int, std::allocator<int> >::operator= (this=0x7fffffffd920, __x=std::vector of length 200, capacity 200 = {...}) at /usr/include/c++/7/bits/vector.tcc:203
#2  0x0000555555555381 in crossover (pai=std::vector of length 200, capacity 200 = {...}, mae=std::vector of length 200, capacity 200 = {...}, filho1=std::vector of length 200, capacity 200 = {...}, filho2=std::vector of length 0, capacity 0) at knapsackga.cpp:98
#3  0x00005555555556d7 in genetic_algorithm () at knapsackga.cpp:130
#4  0x0000555555555b6c in main () at knapsackga.cpp:165

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x280x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575f010 
address max offset: 4
Memory content after  bitflip:0x280x040x000x00
frame name: crossover
symbol name: pop_size
symbol filename: knapsackga.cpp
symbol line: 19
value: 1064
value address: 0x55555575f010 <pop_size>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-12-08 18:30:43]
Fault Injection Successful after 3.289015531539917s
[INFO -- 2018-12-08 18:30:43]
event type: exit
[EXCEPTION -- 2018-12-08 18:30:43]
exit code: no exit code available
