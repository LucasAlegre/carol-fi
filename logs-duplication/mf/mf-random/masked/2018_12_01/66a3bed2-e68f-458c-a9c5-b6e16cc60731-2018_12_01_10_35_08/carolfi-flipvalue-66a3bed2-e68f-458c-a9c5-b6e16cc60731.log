[INFO -- 2018-12-01 10:34:58]
Starting flip_value script
version: 1.1
[INFO -- 2018-12-01 10:34:58]
Initialization strings:
[INFO -- 2018-12-01 10:34:58]
(1) file /tmp/knapsack/mf
[INFO -- 2018-12-01 10:34:58]
initSignal:0
[INFO -- 2018-12-01 10:34:58]
endSignal:12
[INFO -- 2018-12-01 10:34:58]
faultModel:2
[INFO -- 2018-12-01 10:34:58]
Backtrace BEGIN:
#0  0x00005555555558c6 in std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[] (this=0x55555576e550, __n=421886) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555550ba in knapSack (W=588593, n=200, values=std::vector of length 200, capacity 256 = {...}, weights=std::vector of length 200, capacity 256 = {...}, V=std::vector of length 201, capacity 201 = {...}) at knapsackmf.cpp:28
#2  0x0000555555555494 in executeAlgorithm () at knapsackmf.cpp:75
#3  0x000055555555558a in main () at knapsackmf.cpp:81

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0xfe0x6f0x060x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd5e0
address max offset: 8
Memory content after  bitflip:0x150xfa0x8c0x2a0x8c0xef0x4e0xeb
frame name: std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]
symbol name: __n
symbol filename: /usr/include/c++/7/bits/stl_vector.h
symbol line: 795
value: 16955753032384838165
value address: 0x7fffffffd5e0
Type: The type is an integer type.
Type sizeof: 8

[INFO -- 2018-12-01 10:34:58]
Fault Injection Successful after 0.7088181972503662s
[INFO -- 2018-12-01 10:35:07]
event type: exit
[INFO -- 2018-12-01 10:35:07]
exit code: 0
