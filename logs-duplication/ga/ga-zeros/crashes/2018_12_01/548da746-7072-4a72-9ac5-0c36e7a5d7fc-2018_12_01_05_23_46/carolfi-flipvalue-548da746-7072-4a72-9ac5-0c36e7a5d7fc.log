[INFO -- 2018-12-01 05:23:43]
Starting flip_value script
version: 1.1
[INFO -- 2018-12-01 05:23:43]
Initialization strings:
[INFO -- 2018-12-01 05:23:43]
(1) file /tmp/knapsack/ga
[INFO -- 2018-12-01 05:23:43]
initSignal:0
[INFO -- 2018-12-01 05:23:43]
endSignal:13
[INFO -- 2018-12-01 05:23:43]
faultModel:3
[EXCEPTION -- 2018-12-01 05:23:45]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-12-01 05:23:45]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-12-01 05:23:45]
Backtrace BEGIN:
#0  0x0000555555556d28 in std::allocator_traits<std::allocator<chromossome> >::construct<chromossome, chromossome const&> (__a=..., __p=0x555555784820, __args#0=...) at /usr/include/c++/7/bits/alloc_traits.h:475
#1  0x0000555555555f80 in std::vector<chromossome, std::allocator<chromossome> >::push_back (this=0x7fffffffd880, __x=...) at /usr/include/c++/7/bits/stl_vector.h:943
#2  0x0000555555555621 in genetic_algorithm () at knapsackga.cpp:106
#3  0x0000555555555a9b in main () at knapsackga.cpp:141

470	       *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
471	      */
472	      template<typename _Up, typename... _Args>
473		static void
474		construct(allocator_type& __a, _Up* __p, _Args&&... __args)
475		{ __a.construct(__p, std::forward<_Args>(__args)...); }
476	
477	      /**
478	       *  @brief  Destroy an object of type @a _Up
479	       *  @param  __a  An allocator.

Backtrace END
Memory content before bitflip:0xbc0x0c0xaa0xf7
Fault Model: Zero bit-flip
base address to flip value: 0x7fffffffd9d8
address max offset: 4
Memory content after  bitflip:0x000x000x000x00
frame name: main
symbol name: result1
symbol filename: knapsackga.cpp
symbol line: 141
value: 0
value address: 0x7fffffffd9d8
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-12-01 05:23:45]
Fault Injection Successful after 2.6423933506011963s
[INFO -- 2018-12-01 05:23:45]
event type: exit
[EXCEPTION -- 2018-12-01 05:23:45]
exit code: no exit code available
