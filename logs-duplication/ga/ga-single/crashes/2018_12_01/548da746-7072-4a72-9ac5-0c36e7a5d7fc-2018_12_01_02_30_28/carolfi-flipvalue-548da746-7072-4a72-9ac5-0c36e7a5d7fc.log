[INFO -- 2018-12-01 02:30:19]
Starting flip_value script
version: 1.1
[INFO -- 2018-12-01 02:30:19]
Initialization strings:
[INFO -- 2018-12-01 02:30:19]
(1) file /tmp/knapsack/ga
[INFO -- 2018-12-01 02:30:19]
initSignal:0
[INFO -- 2018-12-01 02:30:19]
endSignal:13
[INFO -- 2018-12-01 02:30:19]
faultModel:0
[INFO -- 2018-12-01 02:30:27]
Backtrace BEGIN:
#0  0x0000555555556239 in std::allocator<int>::~allocator (this=0x7fffffffd8a0, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/allocator.h:139
#1  0x0000555555556af2 in std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (this=0x7fffffffd8a0, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:81
#2  0x0000555555556b5f in std::_Vector_base<int, std::allocator<int> >::~_Vector_base (this=0x7fffffffd8a0, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:163
#3  0x0000555555555e7d in std::vector<int, std::allocator<int> >::~vector (this=0x7fffffffd8a0, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:435
#4  0x000055555555568b in genetic_algorithm () at knapsackga.cpp:101
#5  0x0000555555555aab in main () at knapsackga.cpp:143

134	      : __allocator_base<_Tp>(__a) { }
135	
136	      template<typename _Tp1>
137		allocator(const allocator<_Tp1>&) throw() { }
138	
139	      ~allocator() throw() { }
140	
141	      // Inherit everything else.
142	    };
143	

Backtrace END
Memory content before bitflip:0x280x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575f010 
address max offset: 4
Memory content after  bitflip:0x280x080x000x00
frame name: std::_Vector_base<int, std::allocator<int> >::~_Vector_base
symbol name: pop_size
symbol filename: knapsackga.cpp
symbol line: 17
value: 2088
value address: 0x55555575f010 <pop_size>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-12-01 02:30:27]
Fault Injection Successful after 8.017245769500732s
[INFO -- 2018-12-01 02:30:27]
event type: exit
[EXCEPTION -- 2018-12-01 02:30:27]
exit code: no exit code available
