[INFO -- 2018-11-30 04:59:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-30 04:59:03]
Initialization strings:
[INFO -- 2018-11-30 04:59:03]
(1) file /tmp/knapsack/sa
[INFO -- 2018-11-30 04:59:03]
initSignal:0
[INFO -- 2018-11-30 04:59:03]
endSignal:7
[INFO -- 2018-11-30 04:59:03]
faultModel:1
[EXCEPTION -- 2018-11-30 04:59:08]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-30 04:59:08]
Backtrace BEGIN:
#0  0x00005555555557a3 in std::vector<int, std::allocator<int> >::operator[] (this=0x555555759140 <val>, __n=73) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x000055555555510e in cost (solution=std::vector of length 200, capacity 200 = {...}) at knapsacksa.cpp:29
#2  0x0000555555555259 in simulated_annealing () at knapsacksa.cpp:52
#3  0x0000555555555532 in main () at knapsacksa.cpp:87

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Fliping value of field: std::_Vector_base<int, std::allocator<int> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555770ed0
address max offset: 4
Memory content after  bitflip:0x000xa00x000x00
frame name: simulated_annealing
symbol name: val
symbol filename: knapsacksa.cpp
symbol line: 13
value: std::vector of length 183, capacity 239 = {356646912, 291569664, 175833088, 23592960, 18022400, 304676864, 208732160, 249102336, 584450048, 344588288, 367394816, 154796032, 15663104, 213123072, 89587712, 334430208, 654508032, 442040320, 119209984, 585629696, 522190848, 481361920, 594149376, 499974144, 517603328, 231866368, 642908160, 630456320, 105644032, 494206976, 468713472, 302448640, 347602944, 321191936, 606142464, 328269824, 544997376, 231997440, 578617344, 589692928, 302186496, 372113408, 603193344, 474349568, 318963712, 145424384, 212795392, 458489856, 108855296, 595066880, 175767552, 597295104, 202899456, 627441664, 462880768, 330498048, 339345408, 426967040, 385351680, 204406784, 136249344, 335478784, 612237312, 408485888, 49414144, 537657344, 475791360, 594870272, 125501440, 488112128, 38535168, 427950080, 178978816, 148570112, 573767680, 69664768, 342360064, 559677440, 160497664, 137953280, 577110016, 277217280, 469893120, 20905984, 237502464, 112656384, 440926208, 54394880, 625606656, 16646144, 478085120, 13893632, 167575552, 533069824, 103022592, 120455168, 453181440, 252706816, 28311552, 648871936, 99287040, 23789568, 225640448, 403243008, 486604800, 74186752, 221052928, 20250624, 294060032, 502005760, 484966400, 591200256, 495255552, 565248000, 462290944, 309854208, 147849216, 433127424, 207355904, 66912256, 293535744, 573308928, 83623936, 383385600, 257556480, 337444864, 94306304, 629014528, 169803776, 397213696, 275120128, 11862016, 365690880, 92143616, 37224448, 22020096, 105644032, 62849024, 416219136, 333119488, 644546560, 612237312, 651821056, 152371200, 291438592, 164364288, 387514368, 409075712, 524484608, 464977920, 168230912, 277282816, 344850432, 3211264, 23265280, 267911168, 72876032, 474349568, 157876224, 65404928, 119144448, 151781376, 142475264, 341311488, 304414720, 203030528, 420610048, 139264000, 594149376, 631242752, 477757440, 284295168, 335282176, 380829696, 33619968, 274006016, 344129536, 118816768, 61472768, 526057472, 239992832, 340328448, 603914240, -1610612736, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x555555759140 <val>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<int, std::allocator<int> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-30 04:59:08]
Fault Injection Successful after 5.977341413497925s
[INFO -- 2018-11-30 04:59:11]
event type: exit
[EXCEPTION -- 2018-11-30 04:59:11]
exit code: no exit code available
