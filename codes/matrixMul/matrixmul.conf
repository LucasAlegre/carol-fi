[DEFAULT]

debug = False

# Name of the gdb executable, usualy is "gdb-mic" for Xeon Phi
gdbExecName = cuda-gdb

# How many interrupt signals to send sequentially
seqSignals = 1

# How many random threads will attempt to send interrupt signals
numThreadsFI = 1

# Which fault model to use, 0 -> single; 1 -> double; 2 -> random; 3 -> zeros; 4 -> least significant bits (LSB)
faultModel = 0


########################################################################
# KERNEL_BREAKS dict must have the line breakpoint for those kernels
# that the faults will be injected
# <.cu source file>:<first line of the kernel>;<.cu source file2>:<first line of the kernel2>...
kernelBreaks = matrixMul.cu:51;


################### Quicksort ###################

goldFile = /tmp/quicksort/gold_5000000
outputFile = /tmp/quicksort/output_5000000

# Start and end time to try randomly inject a fault
initSignal = 0
endSignal = 5
# How many interrupt signals to send sequentially
seqSignals = 5
# How many random threads will attempt to send interrupt signals
numThreadsFI = 3

# Max time to send signal. It should be the app exec time in seconds
maxWaitTime = 10

# Commands to set the session inside GDB environment
gdbInitStrings = file /home/carol/carol-fi/codes/cuda/matrixMul/matrixMul; set args -wA=512 -hA=512 -hB=512 -wB=512

# Shell command to send SIGINT to the application being tested
signalCmd = killall -2 quicksort

# Kill commands to exit all applications (GDB and the application tested)
# Need to ensure safe termination before another fault injection test
killStrs = killall -9 gdb;killall -9 quicksort

